import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from scipy.interpolate import make_interp_spline


data = {
    "k": list(range(1, 41)),
    "MNIST": [0.93, 0.92, 0.91, 0.90, 0.90, 0.90, 0.89, 0.89, 0.89, 0.88, 0.88, 0.88, 0.88, 0.87, 0.87, 0.87, 0.87,
              0.87, 0.86, 0.86, 0.86, 0.86, 0.86, 0.86, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.84, 0.84, 0.84,
              0.84, 0.84, 0.84, 0.84, 0.84, 0.84],
    "NoisyMNIST": [0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.81, 0.80, 0.79, 0.79, 0.78, 0.78, 0.77, 0.77, 0.77, 0.76, 0.76,
                   0.76, 0.75, 0.75, 0.75, 0.74, 0.74, 0.74, 0.74, 0.73, 0.73, 0.73, 0.72, 0.72, 0.72, 0.72, 0.72, 0.71,
                   0.71, 0.71, 0.71, 0.71, 0.70, 0.70],
    "MSRC": [0.74, 0.70, 0.68, 0.67, 0.65, 0.63, 0.62, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50,
             0.49, 0.48, 0.47, 0.46, 0.46, 0.45, 0.44, 0.43, 0.43, 0.42, 0.42, 0.41, 0.40, 0.40, 0.39, 0.38, 0.38, 0.38,
             0.37, 0.37, 0.36, 0.36],
    "GRAZ02": [0.48, 0.46, 0.45, 0.44, 0.44, 0.43, 0.43, 0.42, 0.42, 0.42, 0.41, 0.41, 0.41, 0.40, 0.40, 0.40, 0.40,
               0.40, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.39, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.38, 0.37,
               0.37, 0.37, 0.37, 0.37, 0.37, 0.37],
    "NUS-WIDE": [0.33, 0.32, 0.31, 0.30, 0.30, 0.29, 0.29, 0.29, 0.29, 0.28, 0.28, 0.28, 0.28, 0.28, 0.28, 0.27, 0.27,
                 0.27, 0.27, 0.27, 0.27, 0.27, 0.27, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.25,
                 0.25, 0.25, 0.25, 0.25, 0.25, 0.25],
    "100leaves": [0.69, 0.64, 0.61, 0.57, 0.55, 0.52, 0.50, 0.48, 0.46, 0.44, 0.43, 0.41, 0.39, 0.38, 0.37, 0.35, 0.34,
                  0.33, 0.32, 0.31, 0.30, 0.29, 0.28, 0.28, 0.27, 0.26, 0.26, 0.25, 0.25, 0.24, 0.24, 0.23, 0.22, 0.22,
                  0.21, 0.21, 0.20, 0.20, 0.19, 0.19],
    "Animals": [0.64, 0.62, 0.61, 0.60, 0.59, 0.58, 0.58, 0.57, 0.57, 0.57, 0.56, 0.56, 0.55, 0.55, 0.55, 0.54, 0.54,
                0.54, 0.54, 0.53, 0.53, 0.53, 0.52, 0.52, 0.52, 0.52, 0.51, 0.51, 0.51, 0.51, 0.51, 0.50, 0.50, 0.50,
                0.50, 0.50, 0.49, 0.49, 0.49, 0.49],
    "Scene15": [0.60, 0.57, 0.55, 0.54, 0.53, 0.52, 0.52, 0.51, 0.50, 0.50, 0.49, 0.49, 0.48, 0.48, 0.47, 0.47, 0.47,
                0.46, 0.46, 0.46, 0.46, 0.45, 0.45, 0.45, 0.44, 0.44, 0.44, 0.44, 0.43, 0.43, 0.43, 0.42, 0.42, 0.42,
                0.42, 0.41, 0.41, 0.41, 0.41, 0.41],
    "Flower17": [0.49, 0.45, 0.42, 0.41, 0.40, 0.39, 0.38, 0.37, 0.36, 0.36, 0.35, 0.35, 0.34, 0.34, 0.33, 0.33, 0.32,
                 0.32, 0.32, 0.31, 0.31, 0.31, 0.31, 0.31, 0.30, 0.30, 0.30, 0.30, 0.30, 0.30, 0.29, 0.29, 0.29, 0.29,
                 0.28, 0.28, 0.28, 0.28, 0.28, 0.28],
    "Out-Scene": [0.58, 0.56, 0.55, 0.54, 0.53, 0.52, 0.52, 0.51, 0.51, 0.50, 0.50, 0.50, 0.49, 0.49, 0.49, 0.48, 0.48,
                  0.48, 0.48, 0.47, 0.47, 0.47, 0.47, 0.47, 0.46, 0.46, 0.46, 0.46, 0.46, 0.46, 0.45, 0.45, 0.45, 0.45,
                  0.45, 0.44, 0.44, 0.44, 0.44, 0.44]
}


df = pd.DataFrame(data)
df_long = df.melt(id_vars=["k"], var_name="Dataset", value_name="heterophily")


datasets_part1 = ["MNIST", "NoisyMNIST", "MSRC", "GRAZ02", "NUS-WIDE"]
datasets_part2 = ["100leaves", "Animals", "Scene15", "Flower17", "Out-Scene"]
df_part1 = df_long[df_long["Dataset"].isin(datasets_part1)]


plt.figure(figsize=(10, 7))


for dataset in datasets_part1:
    subset = df_part1[df_part1["Dataset"] == dataset]
    x = subset["k"]
    y = subset["heterophily"]

    spline = make_interp_spline(x, y, k=3)
    x_smooth = np.linspace(x.min(), x.max(), 500)
    y_smooth = spline(x_smooth)

    plt.plot(x_smooth, y_smooth, label=dataset, linewidth=3)

plt.rcParams["font.family"] = "Times New Roman"
plt.xlabel("The number of neighbors k", fontsize=25)
plt.ylabel("Heterophily", fontsize=25)
plt.xticks(fontsize=20)
plt.yticks(fontsize=20)
plt.legend(loc="upper right", frameon=True, fontsize=18)
plt.grid(alpha=0.5)
plt.margins(x=0)

plt.tight_layout()

plt.savefig("Performance_Plot_Smooth.pdf", format="pdf")
plt.show()
